/*  Syntax Quick Reference for Jeet
    --------------------------
    column(ratios = 1, offset = 0, cycle = 0, uncycle = 0, gutter = jeet.gutter)
    span(ratio = 1, offset = 0)
    shift(ratios = 0, col_or_span = column, gutter = jeet.gutter)
    unshift()
    edit()
    center(max_width = 1410px, pad = 0)
    stack(pad = 0, align = false)
    unstack()
    align(direction = both)
    cf()

    For more info see:
        Kouto Swiss Doc: http://kouto-swiss.io/
        Jeet Doc: http://jeet.gs

    And of course, look in node_modules for axis-css and jeet
*/

@import "kouto-swiss"
@import "jeet"
normalize()
@import "_variables"
@import "_typo"
@import "_animations"
@import "_icons"
@import "_menu"
@import "_search"
@import "_elements"
@import "_header"
@import "_postlist"
@import "_post"
@import "_hightlight"
@import "_author"
@import "_footer"

/**
 * Canvas Background
 */
#canvas-background canvas {
  position: fixed;
  z-index: -1;
}

/* Masonry Grid */
.grid {
  max-width: 90%;
  margin: 0 auto 1.875rem;
  font-family: 'Open Sans',sans-serif;
  font-weight: 300;
  font-style: normal;
  line-height: 2;
  letter-spacing: .01rem;
}
.grid-sizer,
.grid-item { width: 32%; }
.gutter-sizer {
  width: 2%
}

.grid-item {
  margin-bottom: 2%;
  background-color: blueviolet;
}

.grid-item--width2 { width: 66%; }

/* Mobile first queries */

/* Larger than mobile */
@media (min-width: 400px) {
  .grid-item, .grid-sizer { width: 100%; }
}

/* Larger than phablet */
@media (min-width: 550px) {
  .grid-item, .grid-sizer { width: 49%; }
}

/* Larger than tablet */
@media (min-width: 750px) {
  .grid-item, .grid-sizer { width: 49%; }
}

/* Larger than desktop */
@media (min-width: 1000px) {
  .grid-item, .grid-sizer { width: 32%; }
}

/* Larger than Desktop HD */
@media (min-width: 1200px) {
  .grid-item, .grid-sizer { width: 32%; }
}


/* try to animate */
.person {
  height: 800px;
  position: absolute;
  bottom: -100%;
  left: 0;
  right: 0;
  animation-name: easeOutBounce;
  animation-duration: 3s;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-play-state: paused;
}

.person > img {
  background: white;
}

.person:hover {
  /* Toggle our animation play state to running when we are hovering over our sticker */
  animation-play-state: running;
}

@keyframes spin {
  100% { transform: rotate(1turn); }
}

@keyframes easeOutBounce {
  0%   { transform: rotate(-360deg); animation-timing-function:ease-in; }
  // bounce
  50%  { transform: rotate(30deg); animation-timing-function:ease-out; }
  68%  { transform: rotate(-30deg); animation-timing-function:ease-in; }
  // bounce
  80%  { transform: rotate(16deg); animation-timing-function:ease-out; }
  89%  { transform: rotate(-13deg); animation-timing-function:ease-in; }
  // bounce
  94%  { transform: rotate(3deg); animation-timing-function:ease-out; }
  97%  { transform: rotate(-3deg); animation-timing-function:ease-in; }
  // bounce
  100% { transform: rotate(3deg); animation-timing-function:ease-out; }
}
